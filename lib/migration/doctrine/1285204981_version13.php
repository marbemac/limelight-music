<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Version13 extends Doctrine_Migration_Base
{
    public function up()
    {
        $this->dropForeignKey('limelight_review_pro', 'limelight_review_pro_source_id_source_id');
        $this->dropForeignKey('limelight_specification', 'limelight_specification_source_id_source_id');
        $this->dropForeignKey('news_link', 'news_link_source_id_source_id');
        $this->dropForeignKey('source_view', 'source_view_item_id_source_id');
    }

    public function down()
    {
        $this->createTable('source', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '4',
             ),
             'source_name' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '255',
             ),
             'status' => 
             array(
              'type' => 'enum',
              'values' => 
              array(
              0 => 'Active',
              1 => 'Pending',
              2 => 'Flagged',
              3 => 'Struck',
              4 => 'Disabled',
              ),
              'notnull' => '1',
              'default' => 'Active',
              'length' => '',
             ),
             'description' => 
             array(
              'type' => 'string',
              'length' => '400',
             ),
             'url' => 
             array(
              'type' => 'string',
              'length' => '200',
             ),
             'score' => 
             array(
              'type' => 'integer',
              'default' => '0',
              'length' => '4',
             ),
             'user_id' => 
             array(
              'type' => 'integer',
              'length' => '4',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'deleted_at' => 
             array(
              'default' => '',
              'notnull' => '',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'name_slug' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             ), array(
             'type' => '',
             'indexes' => 
             array(
              'name' => 
              array(
              'fields' => 
              array(
               0 => 'source_name',
              ),
              ),
              'source_sluggable' => 
              array(
              'fields' => 
              array(
               0 => 'name_slug',
              ),
              'type' => 'unique',
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => '',
             'charset' => '',
             ));
        $this->createForeignKey('limelight_review_pro', 'limelight_review_pro_source_id_source_id', array(
             'name' => 'limelight_review_pro_source_id_source_id',
             'local' => 'source_id',
             'foreign' => 'id',
             'foreignTable' => 'source',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('limelight_specification', 'limelight_specification_source_id_source_id', array(
             'name' => 'limelight_specification_source_id_source_id',
             'local' => 'source_id',
             'foreign' => 'id',
             'foreignTable' => 'source',
             ));
        $this->createForeignKey('news_link', 'news_link_source_id_source_id', array(
             'name' => 'news_link_source_id_source_id',
             'local' => 'source_id',
             'foreign' => 'id',
             'foreignTable' => 'source',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('source_view', 'source_view_item_id_source_id', array(
             'name' => 'source_view_item_id_source_id',
             'local' => 'item_id',
             'foreign' => 'id',
             'foreignTable' => 'source',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
    }
}