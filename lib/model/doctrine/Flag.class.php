<?php

/**
 * Flag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Flag extends BaseFlag
{
  private function checkFlagCount($count, $itemScore, $userScore)
  {
    $required = sfConfig::get('app_flag_'.get_class($this).'_min') + floor($itemScore/sfConfig::get('app_flag_'.get_class($this).'_itemMultiplier')) + floor($userScore/sfConfig::get('app_flag_'.get_class($this).'_userMultiplier'));

    if ($count >= $required)
      return true;
    else
      return false;
  }

  public function postInsert($event) {
    $item = $this->Item;
    $submitter = $item->User;
    $flags = $item->Flags;
    $count = 0;
    $flaggers = array();

    foreach ($flags as $flag) {
      if ($flag->type == $this->type) {
        $count++;
        array_push($flaggers, $flag->user_id);
      }
    }

    if($this->checkFlagCount($count, $item->score, $submitter->Profile->score) || sfContext::getInstance()->getUser()->getGuardUser()->hasPermission('item_disable')) {
      $item->status = 'Flagged';
      $item->save();
      $item_type = get_class($item);

      // what types of items contribute to a limelights score?
      $limelight_contribute = array('News', 'LimelightWiki', 'LimelightReviewUser', 'LimelightReviewPro', 'LimelightProCon', 'LimelightSpecification');
      // what types of items contribute to a users score?
      $user_contribute = array('News', 'LimelightWiki', 'NewsTag', 'LimelightProCon', 'LimelightSpecification', 'Comment');

      // do we have to reduce the score of the limelights that this items score has been contributing to?
      if (in_array($item_type, $limelight_contribute))
      {

        // could this contribute to multiple limelights?
        if ($item_type == 'News' || $item_type == 'LimelightWiki')
        {
          $limelights = $item->Limelights;
          foreach ($limelights as $limelight)
          {
            Doctrine::getTable('Flag')->reduceLimelightScore($item_type, $item->id, $limelight['id']);
          }
        }
        else // or a single limelight
        {
          $limelight = $item->Item;
          Doctrine::getTable('Flag')->reduceLimelightScore($item_type, $item->id, $limelight['id']);
        }
      }
      
      // reduce the score of the user who submitted this item, who has been getting points as this items score changed
      if (in_array($item_type, $user_contribute))
      {
        Doctrine::getTable('Profile')->reduceUserScore($item_type, $item->id, $item->user_id);   
      }


      Doctrine::getTable('UserAction')->flagItem($item->user_id, $item->id, $item_type);
      $cacheDriver = $this->getTable()->getAttribute(Doctrine_Core::ATTR_RESULT_CACHE);
      $cacheDriver->deleteByPrefix('user_'.$item->user_id.'_minifeed');

      $n = new UserNotification();
      if (get_class($this) == 'NewsFlag')
        $n->message = 'A news story you submitted, \''.$item->title.'\', was flagged for the following reason: \''.$this->type.'\'. It is pending review.';
      else
        $n->message = 'A \''.get_class($item).'\' item you submitted was flagged for the following reason: \''.$this->type.'\'. It is pending review.';
      $n->type = 'flag';
      $n->user_id = $item->user_id;
      $n->save();

      foreach($flaggers as $user_id)
        Doctrine::getTable('Badge')->increaseBadgeStat('Janitor', $user_id);
    }
  }
}