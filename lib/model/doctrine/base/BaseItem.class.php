<?php

/**
 * BaseItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $status
 * @property integer $slice_id
 * @property integer $user_id
 * 
 * @method integer getId()       Returns the current record's "id" value
 * @method enum    getStatus()   Returns the current record's "status" value
 * @method integer getSliceId()  Returns the current record's "slice_id" value
 * @method integer getUserId()   Returns the current record's "user_id" value
 * @method Item    setId()       Sets the current record's "id" value
 * @method Item    setStatus()   Sets the current record's "status" value
 * @method Item    setSliceId()  Sets the current record's "slice_id" value
 * @method Item    setUserId()   Sets the current record's "user_id" value
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('item');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Active',
              1 => 'Pending',
              2 => 'Struck',
              3 => 'Flagged',
              4 => 'Disabled',
             ),
             'default' => 'Active',
             ));
        $this->hasColumn('slice_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('userIndex', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}