<?php

/**
 * BaseProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $sf_guard_user_id
 * @property string $first_name
 * @property string $last_name
 * @property string $zipcode
 * @property string $gender
 * @property string $age_range
 * @property date $rpx_birthday
 * @property varchar $rpx_url
 * @property string $income_range
 * @property string $email
 * @property integer $total_views
 * @property enum $status
 * @property string $activate_code
 * @property integer $activated
 * @property string $profile_image
 * @property bool $rpx_profile_image
 * @property integer $score
 * @property decimal $score_ratio
 * @property integer $score_positive_count
 * @property integer $score_negative_count
 * @property integer $limelight_count
 * @property integer $flag_count
 * @property integer $login_count
 * @property integer $song_playing_id
 * @property bool $first_100
 * @property bool $first_1000
 * @property bool $is_mod
 * @property date $suspend_until
 * @property sfGuardUser $User
 * 
 * @method integer     getId()                   Returns the current record's "id" value
 * @method integer     getSfGuardUserId()        Returns the current record's "sf_guard_user_id" value
 * @method string      getFirstName()            Returns the current record's "first_name" value
 * @method string      getLastName()             Returns the current record's "last_name" value
 * @method string      getZipcode()              Returns the current record's "zipcode" value
 * @method string      getGender()               Returns the current record's "gender" value
 * @method string      getAgeRange()             Returns the current record's "age_range" value
 * @method date        getRpxBirthday()          Returns the current record's "rpx_birthday" value
 * @method varchar     getRpxUrl()               Returns the current record's "rpx_url" value
 * @method string      getIncomeRange()          Returns the current record's "income_range" value
 * @method string      getEmail()                Returns the current record's "email" value
 * @method integer     getTotalViews()           Returns the current record's "total_views" value
 * @method enum        getStatus()               Returns the current record's "status" value
 * @method string      getActivateCode()         Returns the current record's "activate_code" value
 * @method integer     getActivated()            Returns the current record's "activated" value
 * @method string      getProfileImage()         Returns the current record's "profile_image" value
 * @method bool        getRpxProfileImage()      Returns the current record's "rpx_profile_image" value
 * @method integer     getScore()                Returns the current record's "score" value
 * @method decimal     getScoreRatio()           Returns the current record's "score_ratio" value
 * @method integer     getScorePositiveCount()   Returns the current record's "score_positive_count" value
 * @method integer     getScoreNegativeCount()   Returns the current record's "score_negative_count" value
 * @method integer     getLimelightCount()       Returns the current record's "limelight_count" value
 * @method integer     getFlagCount()            Returns the current record's "flag_count" value
 * @method integer     getLoginCount()           Returns the current record's "login_count" value
 * @method integer     getSongPlayingId()        Returns the current record's "song_playing_id" value
 * @method bool        getFirst100()             Returns the current record's "first_100" value
 * @method bool        getFirst1000()            Returns the current record's "first_1000" value
 * @method bool        getIsMod()                Returns the current record's "is_mod" value
 * @method date        getSuspendUntil()         Returns the current record's "suspend_until" value
 * @method sfGuardUser getUser()                 Returns the current record's "User" value
 * @method Profile     setId()                   Sets the current record's "id" value
 * @method Profile     setSfGuardUserId()        Sets the current record's "sf_guard_user_id" value
 * @method Profile     setFirstName()            Sets the current record's "first_name" value
 * @method Profile     setLastName()             Sets the current record's "last_name" value
 * @method Profile     setZipcode()              Sets the current record's "zipcode" value
 * @method Profile     setGender()               Sets the current record's "gender" value
 * @method Profile     setAgeRange()             Sets the current record's "age_range" value
 * @method Profile     setRpxBirthday()          Sets the current record's "rpx_birthday" value
 * @method Profile     setRpxUrl()               Sets the current record's "rpx_url" value
 * @method Profile     setIncomeRange()          Sets the current record's "income_range" value
 * @method Profile     setEmail()                Sets the current record's "email" value
 * @method Profile     setTotalViews()           Sets the current record's "total_views" value
 * @method Profile     setStatus()               Sets the current record's "status" value
 * @method Profile     setActivateCode()         Sets the current record's "activate_code" value
 * @method Profile     setActivated()            Sets the current record's "activated" value
 * @method Profile     setProfileImage()         Sets the current record's "profile_image" value
 * @method Profile     setRpxProfileImage()      Sets the current record's "rpx_profile_image" value
 * @method Profile     setScore()                Sets the current record's "score" value
 * @method Profile     setScoreRatio()           Sets the current record's "score_ratio" value
 * @method Profile     setScorePositiveCount()   Sets the current record's "score_positive_count" value
 * @method Profile     setScoreNegativeCount()   Sets the current record's "score_negative_count" value
 * @method Profile     setLimelightCount()       Sets the current record's "limelight_count" value
 * @method Profile     setFlagCount()            Sets the current record's "flag_count" value
 * @method Profile     setLoginCount()           Sets the current record's "login_count" value
 * @method Profile     setSongPlayingId()        Sets the current record's "song_playing_id" value
 * @method Profile     setFirst100()             Sets the current record's "first_100" value
 * @method Profile     setFirst1000()            Sets the current record's "first_1000" value
 * @method Profile     setIsMod()                Sets the current record's "is_mod" value
 * @method Profile     setSuspendUntil()         Sets the current record's "suspend_until" value
 * @method Profile     setUser()                 Sets the current record's "User" value
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profile');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('sf_guard_user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('zipcode', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('gender', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('age_range', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('rpx_birthday', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('rpx_url', 'varchar', 300, array(
             'type' => 'varchar',
             'length' => 300,
             ));
        $this->hasColumn('income_range', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'email' => true,
             'length' => 255,
             ));
        $this->hasColumn('total_views', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Active',
              1 => 'Pending',
              2 => 'Flagged',
              3 => 'Struck',
              4 => 'Disabled',
             ),
             'default' => 'Pending',
             ));
        $this->hasColumn('activate_code', 'string', 14, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 14,
             ));
        $this->hasColumn('activated', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('profile_image', 'string', null, array(
             'type' => 'string',
             'default' => 'user_profile_default.jpg',
             ));
        $this->hasColumn('rpx_profile_image', 'bool', null, array(
             'type' => 'bool',
             'default' => 0,
             ));
        $this->hasColumn('score', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('score_ratio', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             ));
        $this->hasColumn('score_positive_count', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('score_negative_count', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('limelight_count', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('flag_count', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('login_count', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('song_playing_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('first_100', 'bool', null, array(
             'type' => 'bool',
             'default' => 0,
             ));
        $this->hasColumn('first_1000', 'bool', null, array(
             'type' => 'bool',
             'default' => 0,
             ));
        $this->hasColumn('is_mod', 'bool', null, array(
             'type' => 'bool',
             'default' => 0,
             ));
        $this->hasColumn('suspend_until', 'date', null, array(
             'type' => 'date',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'sf_guard_user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}