<?php

/**
 * BaseLimelightSummary
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $summary
 * @property integer $version
 * @property bool $is_active
 * @property integer $item_id
 * @property integer $slice_id
 * @property sfGuardUser $User
 * @property Limelight $Limelight
 * 
 * @method string           getSummary()   Returns the current record's "summary" value
 * @method integer          getVersion()   Returns the current record's "version" value
 * @method bool             getIsActive()  Returns the current record's "is_active" value
 * @method integer          getItemId()    Returns the current record's "item_id" value
 * @method integer          getSliceId()   Returns the current record's "slice_id" value
 * @method sfGuardUser      getUser()      Returns the current record's "User" value
 * @method Limelight        getLimelight() Returns the current record's "Limelight" value
 * @method LimelightSummary setSummary()   Sets the current record's "summary" value
 * @method LimelightSummary setVersion()   Sets the current record's "version" value
 * @method LimelightSummary setIsActive()  Sets the current record's "is_active" value
 * @method LimelightSummary setItemId()    Sets the current record's "item_id" value
 * @method LimelightSummary setSliceId()   Sets the current record's "slice_id" value
 * @method LimelightSummary setUser()      Sets the current record's "User" value
 * @method LimelightSummary setLimelight() Sets the current record's "Limelight" value
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLimelightSummary extends Item
{
    public function setTableDefinition()
    {
        parent::setTableDefinition();
        $this->setTableName('limelight_summary');
        $this->hasColumn('summary', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('version', 'integer', 3, array(
             'type' => 'integer',
             'default' => 1,
             'length' => 3,
             ));
        $this->hasColumn('is_active', 'bool', null, array(
             'type' => 'bool',
             'default' => 1,
             ));
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('slice_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Limelight', array(
             'local' => 'item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}