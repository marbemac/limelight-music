<?php

/**
 * BaseCategoryLimelight
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $limelight_id
 * @property integer $category_id
 * @property Limelight $Limelight
 * @property Category $Category
 * 
 * @method integer           getLimelightId()  Returns the current record's "limelight_id" value
 * @method integer           getCategoryId()   Returns the current record's "category_id" value
 * @method Limelight         getLimelight()    Returns the current record's "Limelight" value
 * @method Category          getCategory()     Returns the current record's "Category" value
 * @method CategoryLimelight setLimelightId()  Sets the current record's "limelight_id" value
 * @method CategoryLimelight setCategoryId()   Sets the current record's "category_id" value
 * @method CategoryLimelight setLimelight()    Sets the current record's "Limelight" value
 * @method CategoryLimelight setCategory()     Sets the current record's "Category" value
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategoryLimelight extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category_limelight');
        $this->hasColumn('limelight_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Limelight', array(
             'local' => 'limelight_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}