<?php

/**
 * BaseLimelightSlice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $profile_image
 * @property enum $slice_type
 * @property integer $user_id
 * @property integer $item_id
 * @property sfGuardUser $User
 * @property Limelight $Limelight
 * 
 * @method string         getName()          Returns the current record's "name" value
 * @method string         getProfileImage()  Returns the current record's "profile_image" value
 * @method enum           getSliceType()     Returns the current record's "slice_type" value
 * @method integer        getUserId()        Returns the current record's "user_id" value
 * @method integer        getItemId()        Returns the current record's "item_id" value
 * @method sfGuardUser    getUser()          Returns the current record's "User" value
 * @method Limelight      getLimelight()     Returns the current record's "Limelight" value
 * @method LimelightSlice setName()          Sets the current record's "name" value
 * @method LimelightSlice setProfileImage()  Sets the current record's "profile_image" value
 * @method LimelightSlice setSliceType()     Sets the current record's "slice_type" value
 * @method LimelightSlice setUserId()        Sets the current record's "user_id" value
 * @method LimelightSlice setItemId()        Sets the current record's "item_id" value
 * @method LimelightSlice setUser()          Sets the current record's "User" value
 * @method LimelightSlice setLimelight()     Sets the current record's "Limelight" value
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLimelightSlice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('limelight_slice');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('profile_image', 'string', 255, array(
             'type' => 'string',
             'default' => 'limelight_profile_default.gif',
             'length' => 255,
             ));
        $this->hasColumn('slice_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'model',
              1 => 'version',
             ),
             'default' => 'product',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Limelight', array(
             'local' => 'item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'name' => 'name_slug',
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
        $this->actAs($sluggable0);
    }
}