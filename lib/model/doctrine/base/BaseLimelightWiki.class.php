<?php

/**
 * BaseLimelightWiki
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $limelight_id
 * @property integer $wiki_group_id
 * @property integer $order_id
 * @property Limelight $Limelight
 * @property Wiki $Wiki
 * @property Doctrine_Collection $Flags
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method integer             getLimelightId()   Returns the current record's "limelight_id" value
 * @method integer             getWikiGroupId()   Returns the current record's "wiki_group_id" value
 * @method integer             getOrderId()       Returns the current record's "order_id" value
 * @method Limelight           getLimelight()     Returns the current record's "Limelight" value
 * @method Wiki                getWiki()          Returns the current record's "Wiki" value
 * @method Doctrine_Collection getFlags()         Returns the current record's "Flags" collection
 * @method LimelightWiki       setId()            Sets the current record's "id" value
 * @method LimelightWiki       setLimelightId()   Sets the current record's "limelight_id" value
 * @method LimelightWiki       setWikiGroupId()   Sets the current record's "wiki_group_id" value
 * @method LimelightWiki       setOrderId()       Sets the current record's "order_id" value
 * @method LimelightWiki       setLimelight()     Sets the current record's "Limelight" value
 * @method LimelightWiki       setWiki()          Sets the current record's "Wiki" value
 * @method LimelightWiki       setFlags()         Sets the current record's "Flags" collection
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLimelightWiki extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('limelight_wiki');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('limelight_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('wiki_group_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('order_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Limelight', array(
             'local' => 'limelight_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Wiki', array(
             'local' => 'wiki_group_id',
             'foreign' => 'group_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('LimelightWikiFlag as Flags', array(
             'local' => 'id',
             'foreign' => 'item_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}