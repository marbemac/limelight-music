<?php

/**
 * BaseBadgeLevel
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $level
 * @property integer $num_required
 * @property integer $badge_id
 * @property Badge $Badge
 * 
 * @method integer    getId()           Returns the current record's "id" value
 * @method integer    getLevel()        Returns the current record's "level" value
 * @method integer    getNumRequired()  Returns the current record's "num_required" value
 * @method integer    getBadgeId()      Returns the current record's "badge_id" value
 * @method Badge      getBadge()        Returns the current record's "Badge" value
 * @method BadgeLevel setId()           Sets the current record's "id" value
 * @method BadgeLevel setLevel()        Sets the current record's "level" value
 * @method BadgeLevel setNumRequired()  Sets the current record's "num_required" value
 * @method BadgeLevel setBadgeId()      Sets the current record's "badge_id" value
 * @method BadgeLevel setBadge()        Sets the current record's "Badge" value
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBadgeLevel extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('badge_level');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('level', 'integer', 3, array(
             'type' => 'integer',
             'length' => 3,
             ));
        $this->hasColumn('num_required', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('badge_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('badgeIndex', array(
             'fields' => 
             array(
              0 => 'badge_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Badge', array(
             'local' => 'badge_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}