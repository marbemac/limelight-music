<?php

/**
 * BaseTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property enum $status
 * @property integer $score
 * @property integer $user_id
 * @property sfGuardUser $User
 * @property Doctrine_Collection $ItemTags
 * 
 * @method integer             getId()       Returns the current record's "id" value
 * @method string              getName()     Returns the current record's "name" value
 * @method enum                getStatus()   Returns the current record's "status" value
 * @method integer             getScore()    Returns the current record's "score" value
 * @method integer             getUserId()   Returns the current record's "user_id" value
 * @method sfGuardUser         getUser()     Returns the current record's "User" value
 * @method Doctrine_Collection getItemTags() Returns the current record's "ItemTags" collection
 * @method Tag                 setId()       Sets the current record's "id" value
 * @method Tag                 setName()     Sets the current record's "name" value
 * @method Tag                 setStatus()   Sets the current record's "status" value
 * @method Tag                 setScore()    Sets the current record's "score" value
 * @method Tag                 setUserId()   Sets the current record's "user_id" value
 * @method Tag                 setUser()     Sets the current record's "User" value
 * @method Tag                 setItemTags() Sets the current record's "ItemTags" collection
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Active',
              1 => 'Pending',
              2 => 'Struck',
              3 => 'Flagged',
              4 => 'Disabled',
             ),
             'default' => 'Active',
             ));
        $this->hasColumn('score', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('userIndex', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ItemTag as ItemTags', array(
             'local' => 'id',
             'foreign' => 'tag_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'name' => 'name_slug',
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
        $this->actAs($sluggable0);
    }
}