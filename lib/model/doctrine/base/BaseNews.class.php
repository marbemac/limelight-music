<?php

/**
 * BaseNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $content
 * @property string $news_image
 * @property integer $score
 * @property integer $total_views
 * @property integer $favorited_count
 * @property integer $favorite_badge_flag
 * @property integer $tag_lock
 * @property integer $comment_lock
 * @property integer $user_id
 * @property sfGuardUser $User
 * @property Doctrine_Collection $Limelights
 * @property Doctrine_Collection $NewsLimelights
 * @property Doctrine_Collection $Links
 * @property Doctrine_Collection $Comments
 * @property Doctrine_Collection $Tags
 * @property Doctrine_Collection $UserAction
 * @property Doctrine_Collection $Favorited
 * @property Doctrine_Collection $Views
 * @property Doctrine_Collection $Scores
 * @property Doctrine_Collection $Flags
 * 
 * @method string              getTitle()               Returns the current record's "title" value
 * @method string              getContent()             Returns the current record's "content" value
 * @method string              getNewsImage()           Returns the current record's "news_image" value
 * @method integer             getScore()               Returns the current record's "score" value
 * @method integer             getTotalViews()          Returns the current record's "total_views" value
 * @method integer             getFavoritedCount()      Returns the current record's "favorited_count" value
 * @method integer             getFavoriteBadgeFlag()   Returns the current record's "favorite_badge_flag" value
 * @method integer             getTagLock()             Returns the current record's "tag_lock" value
 * @method integer             getCommentLock()         Returns the current record's "comment_lock" value
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method sfGuardUser         getUser()                Returns the current record's "User" value
 * @method Doctrine_Collection getLimelights()          Returns the current record's "Limelights" collection
 * @method Doctrine_Collection getNewsLimelights()      Returns the current record's "NewsLimelights" collection
 * @method Doctrine_Collection getLinks()               Returns the current record's "Links" collection
 * @method Doctrine_Collection getComments()            Returns the current record's "Comments" collection
 * @method Doctrine_Collection getTags()                Returns the current record's "Tags" collection
 * @method Doctrine_Collection getUserAction()          Returns the current record's "UserAction" collection
 * @method Doctrine_Collection getFavorited()           Returns the current record's "Favorited" collection
 * @method Doctrine_Collection getViews()               Returns the current record's "Views" collection
 * @method Doctrine_Collection getScores()              Returns the current record's "Scores" collection
 * @method Doctrine_Collection getFlags()               Returns the current record's "Flags" collection
 * @method News                setTitle()               Sets the current record's "title" value
 * @method News                setContent()             Sets the current record's "content" value
 * @method News                setNewsImage()           Sets the current record's "news_image" value
 * @method News                setScore()               Sets the current record's "score" value
 * @method News                setTotalViews()          Sets the current record's "total_views" value
 * @method News                setFavoritedCount()      Sets the current record's "favorited_count" value
 * @method News                setFavoriteBadgeFlag()   Sets the current record's "favorite_badge_flag" value
 * @method News                setTagLock()             Sets the current record's "tag_lock" value
 * @method News                setCommentLock()         Sets the current record's "comment_lock" value
 * @method News                setUserId()              Sets the current record's "user_id" value
 * @method News                setUser()                Sets the current record's "User" value
 * @method News                setLimelights()          Sets the current record's "Limelights" collection
 * @method News                setNewsLimelights()      Sets the current record's "NewsLimelights" collection
 * @method News                setLinks()               Sets the current record's "Links" collection
 * @method News                setComments()            Sets the current record's "Comments" collection
 * @method News                setTags()                Sets the current record's "Tags" collection
 * @method News                setUserAction()          Sets the current record's "UserAction" collection
 * @method News                setFavorited()           Sets the current record's "Favorited" collection
 * @method News                setViews()               Sets the current record's "Views" collection
 * @method News                setScores()              Sets the current record's "Scores" collection
 * @method News                setFlags()               Sets the current record's "Flags" collection
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNews extends Item
{
    public function setTableDefinition()
    {
        parent::setTableDefinition();
        $this->setTableName('news');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', 2000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2000,
             ));
        $this->hasColumn('news_image', 'string', 255, array(
             'type' => 'string',
             'default' => 'news_profile_default.gif',
             'length' => 255,
             ));
        $this->hasColumn('score', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('total_views', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('favorited_count', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('favorite_badge_flag', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('tag_lock', 'integer', 3, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('comment_lock', 'integer', 3, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('index', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Limelight as Limelights', array(
             'refClass' => 'LimelightNews',
             'local' => 'news_id',
             'foreign' => 'limelight_id'));

        $this->hasMany('LimelightNews as NewsLimelights', array(
             'local' => 'id',
             'foreign' => 'news_id'));

        $this->hasMany('NewsLink as Links', array(
             'local' => 'id',
             'foreign' => 'item_id'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'News_id'));

        $this->hasMany('ItemTag as Tags', array(
             'local' => 'id',
             'foreign' => 'item_id'));

        $this->hasMany('UserAction', array(
             'local' => 'id',
             'foreign' => 'News_id'));

        $this->hasMany('NewsFavorite as Favorited', array(
             'local' => 'id',
             'foreign' => 'item_id'));

        $this->hasMany('NewsView as Views', array(
             'local' => 'id',
             'foreign' => 'item_id'));

        $this->hasMany('NewsScore as Scores', array(
             'local' => 'id',
             'foreign' => 'item_id'));

        $this->hasMany('NewsFlag as Flags', array(
             'local' => 'id',
             'foreign' => 'item_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'name' => 'title_slug',
             ));
        $this->actAs($sluggable0);
    }
}