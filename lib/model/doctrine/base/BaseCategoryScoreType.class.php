<?php

/**
 * BaseCategoryScoreType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * @property string $title
 * @property string $description
 * @property Category $Category
 * @property Doctrine_Collection $Parts
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method integer             getCategoryId()  Returns the current record's "category_id" value
 * @method string              getTitle()       Returns the current record's "title" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Category            getCategory()    Returns the current record's "Category" value
 * @method Doctrine_Collection getParts()       Returns the current record's "Parts" collection
 * @method CategoryScoreType   setId()          Sets the current record's "id" value
 * @method CategoryScoreType   setCategoryId()  Sets the current record's "category_id" value
 * @method CategoryScoreType   setTitle()       Sets the current record's "title" value
 * @method CategoryScoreType   setDescription() Sets the current record's "description" value
 * @method CategoryScoreType   setCategory()    Sets the current record's "Category" value
 * @method CategoryScoreType   setParts()       Sets the current record's "Parts" collection
 * 
 * @package    limelight
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategoryScoreType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category_score_type');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('description', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('LimelightReviewScorePart as Parts', array(
             'local' => 'id',
             'foreign' => 'category_score_type_id'));
    }
}