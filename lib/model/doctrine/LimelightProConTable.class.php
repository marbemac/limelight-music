<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class LimelightProConTable extends ItemTable
{
  public function getProsCons($ll_id, $type)
  {
    // used by pro/con limelight components
    $q = Doctrine_Query::create()
        ->select('*')
        ->from('LimelightProCon')
        ->where('item_id = ? AND type = ? AND status = ?', array($ll_id, $type, 'Active'))
        ->orderBy('score DESC')
        ->addOrderBy('created_at ASC');
    $result = $q->fetchArray();

    $procons = array();
    foreach ($result as $key => $procon)
    {
      $id = $procon['slice_id'] ? $procon['slice_id'] : 0;
      $procons[$id][] = $procon;
    }

    return $procons;
  }

  // used for autocomplete
  public function populateProsCons($item_type)
  {
    $q = Doctrine_Query::create()
        ->select('name')
        ->from('LimelightProCon')
        ->where('type = ? AND status = ?', array('Active', $item_type))
        ->useResultCache(true, 300, $item_type.'s');
    return $q->execute(array(), Doctrine::HYDRATE_NONE);
  }

  // used by limelight submit
  public function checkDuplicate($ll_id, $name)
    {
      $q = Doctrine_Query::create()
        ->select('id')
        ->from('LimelightProCon ls')
        ->where('item_id = ? AND name_slug = ?', array($ll_id, LimelightUtils::slugify($name)));

      return ($q->fetchOne() ? true : false);
    }
}