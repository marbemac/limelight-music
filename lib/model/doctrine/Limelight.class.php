<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Limelight extends BaseLimelight
{
  function postInsert($event)
  {
    $w = new Wiki();
    $w->note = 'Initial blank auto-generated wiki segment.';
    $w->is_active = 1;
    $w->edit_type = 'minor';
    $w->topics = $this->name;
    $w->group_id = Doctrine::getTable('LimelightWiki')->getNextAvailableGroupId();
    $w->content = 'This wiki segment was automatically generated for the '.$this->name.' limelight. Double click this this text to edit this wiki segment.';
    $w->save();

    $lw = new LimelightWiki();
    $lw->limelight_id = $this->id;
    $lw->wiki_group_id = $w->group_id;
    $lw->order_id = 1;
    $lw->save();

    $s = new LimelightSummary();
    $s->item_id = $this->id;
    $s->summary = 'No summary.';
    $s->save();
    
    parent::postInsert($event);
  }

  public function getCategoryTree() {
    if ($this->cat_tree) {
      $cats = explode(',', $this->cat_tree);
      $catString = '';
      foreach ($cats as $cat) {
        $tempCat = explode('--', $cat);
        $catString .= LimelightUtils::slugify($tempCat[0]) . '-';
      }
      return substr($catString, 0, -1);
    } else {
      $categoryTable = Doctrine::getTable('Category');
      $cat = $categoryTable->find($this->category_id);
      $catString = LimelightUtils::slugify($cat['name']);
      $count = 0;
      while ($cat['parent'] && $count < 10) {
        $cat = $categoryTable->find($cat['parent']);
        $catString = LimelightUtils::slugify($cat['name']) . '-' . $catString;
        $count++;
      }
      return $catString;
    }
  }

  public function saveProfileImage($tmp_img)
  {
    $imgInfo_array = getimagesize($tmp_img);

    $parts = explode('/', $imgInfo_array['mime']);
    $ext = $parts[count($parts)-1];

    // create the 4 file sizes and save
    $fileName = uniqid('LI') . '.' . $ext;
    $thumbnail_l = new sfThumbnail(700, 700);
    $thumbnail_l->loadFile($tmp_img);
    $thumbnail_l->save(sfConfig::get('sf_upload_dir').'/ll_images/large/'.$fileName);
    $thumbnail_m = new sfThumbnail(200, 200);
    $thumbnail_m->loadFile($tmp_img);
    $thumbnail_m->save(sfConfig::get('sf_upload_dir').'/ll_images/med/'.$fileName);
    $thumbnail_s = new sfThumbnail(130, 130);
    $thumbnail_s->loadFile($tmp_img);
    $thumbnail_s->save(sfConfig::get('sf_upload_dir').'/ll_images/small/'.$fileName);
    $thumbnail_t = new sfThumbnail(40, 40);
    $thumbnail_t->loadFile($tmp_img);
    $thumbnail_t->save(sfConfig::get('sf_upload_dir').'/ll_images/thumb/'.$fileName);

    $this->profile_image = $fileName;
    $this->save();
  }
}