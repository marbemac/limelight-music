CREATE TABLE badge (id INT AUTO_INCREMENT, name VARCHAR(255), description VARCHAR(255), type VARCHAR(100), image_name VARCHAR(255), site VARCHAR(255) DEFAULT 'tech', status VARCHAR(50) DEFAULT 'Active', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, name_slug VARCHAR(255), UNIQUE INDEX badge_sluggable_idx (name_slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE badge_level (id INT AUTO_INCREMENT, level MEDIUMINT, num_required INT, badge_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX badgeIndex_idx (badge_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE beta_email (id BIGINT AUTO_INCREMENT, email VARCHAR(255) NOT NULL, ip VARCHAR(50) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE beta_giveaway (id BIGINT AUTO_INCREMENT, guess VARCHAR(255) NOT NULL, group_code BIGINT, beta_email_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX beta_email_id_idx (beta_email_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE category (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, status VARCHAR(255) DEFAULT 'Pending' NOT NULL, num_limelights INT DEFAULT 0, num_news INT DEFAULT 0, amazon_category VARCHAR(100), site VARCHAR(255) DEFAULT 'tech', parent_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, name_slug VARCHAR(255), INDEX index_idx (parent_id), UNIQUE INDEX category_sluggable_idx (name_slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE category_limelight (id BIGINT AUTO_INCREMENT, limelight_id INT, category_id INT, INDEX limelight_id_idx (limelight_id), INDEX category_id_idx (category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE category_score_type (id INT AUTO_INCREMENT, category_id INT, title VARCHAR(50), description TEXT, INDEX category_id_idx (category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE category_specification (id INT AUTO_INCREMENT, category_id INT, specification_id INT, status VARCHAR(255) DEFAULT 'Active', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX categoryIndex_idx (category_id), INDEX specification_id_idx (specification_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comment (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, content TEXT NOT NULL, score INT DEFAULT 0 NOT NULL, type VARCHAR(255) NOT NULL, parent_id INT, edited SMALLINT DEFAULT 0 NOT NULL, news_id INT, song_id INT, wiki_id INT, limelightreviewuser_id INT, limelightreviewpro_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX index_idx (user_id), INDEX parentIndex_idx (parent_id), INDEX news_id_idx (news_id), INDEX song_id_idx (song_id), INDEX limelightreviewuser_id_idx (limelightreviewuser_id), INDEX limelightreviewpro_id_idx (limelightreviewpro_id), INDEX wiki_id_idx (wiki_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comment_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comment_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE favorite (id INT AUTO_INCREMENT, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE follow_limelight_reference (id BIGINT AUTO_INCREMENT, user_id INT, limelight_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX limelight_id_idx (limelight_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE follow_user_reference (id BIGINT AUTO_INCREMENT, user1_id INT, user2_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user1_id_idx (user1_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE item (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE item_tag (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, score INT DEFAULT 0, tag_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX tag_id_idx (tag_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE item_tag_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE item_tag_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, name VARCHAR(255) NOT NULL, score INT DEFAULT 0 NOT NULL, profile_image VARCHAR(255) DEFAULT 'limelight_profile_default.gif', total_views INT DEFAULT 0, favorite_badge_flag TINYINT DEFAULT 0, reviewable TINYINT DEFAULT 1, wiki_lock TINYINT DEFAULT 0, spec_lock TINYINT DEFAULT 0, procon_lock TINYINT DEFAULT 0, module_specifications bool DEFAULT 0, module_features bool DEFAULT 0, module_procon bool DEFAULT 0, module_products bool DEFAULT 0, limelight_type VARCHAR(255) DEFAULT 'product', site VARCHAR(255) DEFAULT 'tech', company_name VARCHAR(255), company_id INT, is_stub TINYINT DEFAULT 1, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, name_slug VARCHAR(255), INDEX userIndex_idx (user_id), UNIQUE INDEX limelight_sluggable_idx (name_slug), INDEX company_id_idx (company_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_favorite (id INT AUTO_INCREMENT, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_news (id BIGINT AUTO_INCREMENT, limelight_id INT, news_id INT, INDEX limelight_id_idx (limelight_id), INDEX news_id_idx (news_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_own (id BIGINT AUTO_INCREMENT, item_id INT, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX user_id_idx (user_id), INDEX item_id_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_pro_con (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, name VARCHAR(255) NOT NULL, score INT DEFAULT 0 NOT NULL, type VARCHAR(255), item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, name_slug VARCHAR(255), INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), UNIQUE INDEX limelight_pro_con_sluggable_idx (name_slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_pro_con_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_pro_con_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_review_pro (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, item_id INT, excerpt VARCHAR(255), source_url VARCHAR(255), score INT DEFAULT 0, review_score_given MEDIUMINT, review_score_max MEDIUMINT, source_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX index_idx (item_id, user_id), INDEX item_id_idx (item_id), INDEX source_id_idx (source_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_review_pro_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_review_pro_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_review_score_part (id INT AUTO_INCREMENT, category_score_type_id INT, review_id INT, score MEDIUMINT, INDEX category_score_type_id_idx (category_score_type_id), INDEX review_id_idx (review_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_review_user (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, item_id INT, title VARCHAR(255), content TEXT, score INT DEFAULT 0, review_score MEDIUMINT DEFAULT 0, edited SMALLINT DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX index_idx (item_id, user_id), INDEX item_id_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_review_user_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_review_user_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, item_id INT, type VARCHAR(255), status VARCHAR(255) DEFAULT 'Active', contributing_item_id INT, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX limelightIndex_idx (item_id), INDEX userIndex_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_slice (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, profile_image VARCHAR(255) DEFAULT 'limelight_profile_default.gif', slice_type VARCHAR(255) DEFAULT 'product', user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, name_slug VARCHAR(255), UNIQUE INDEX limelight_slice_sluggable_idx (name_slug), INDEX user_id_idx (user_id), INDEX item_id_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_song (id BIGINT AUTO_INCREMENT, limelight_id INT, song_id INT, INDEX limelight_id_idx (limelight_id), INDEX song_id_idx (song_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_specification (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, content VARCHAR(150), score INT DEFAULT 0, source_url VARCHAR(255), source_id INT, specification_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, content_slug VARCHAR(255), INDEX userIndex_idx (user_id), UNIQUE INDEX limelight_specification_sluggable_idx (content_slug), INDEX specification_id_idx (specification_id), INDEX source_id_idx (source_id), INDEX item_id_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_specification_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_specification_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_summary (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, summary TEXT, version MEDIUMINT DEFAULT 1, is_active bool DEFAULT 1, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX item_id_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_view (id INT AUTO_INCREMENT, count INT DEFAULT 1, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX limelightIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_wiki (id INT AUTO_INCREMENT, limelight_id INT, wiki_group_id INT, order_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX limelight_id_idx (limelight_id), INDEX wiki_group_id_idx (wiki_group_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE limelight_wiki_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE log (id INT AUTO_INCREMENT, type VARCHAR(50), message VARCHAR(255), user_id INT, ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX typeIndex_idx (type), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, title VARCHAR(255) NOT NULL, content TEXT NOT NULL, news_image VARCHAR(255) DEFAULT 'news_profile_default.gif', score INT DEFAULT 0 NOT NULL, total_views INT DEFAULT 0, favorited_count INT DEFAULT 0, favorite_badge_flag TINYINT DEFAULT 0, tag_lock MEDIUMINT DEFAULT 0, comment_lock MEDIUMINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, title_slug VARCHAR(255), INDEX userIndex_idx (user_id), INDEX index_idx (user_id), UNIQUE INDEX news_sluggable_idx (title_slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_favorite (id INT AUTO_INCREMENT, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_link (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, source_url VARCHAR(255) UNIQUE, score INT DEFAULT 0, item_id INT, source_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, source_url_slug VARCHAR(255), INDEX userIndex_idx (user_id), UNIQUE INDEX news_link_sluggable_idx (source_url_slug), INDEX source_id_idx (source_id), INDEX item_id_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_link_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_link_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_tag (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, score INT DEFAULT 0, tag_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX tag_id_idx (tag_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_tag_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_tag_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE news_view (id INT AUTO_INCREMENT, count INT DEFAULT 1, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX newsIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE play (id INT AUTO_INCREMENT, count INT DEFAULT 1, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pro_review_favorite (id INT AUTO_INCREMENT, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE profile (id INT AUTO_INCREMENT, sf_guard_user_id INT, first_name VARCHAR(255), last_name VARCHAR(255), zipcode VARCHAR(30), gender VARCHAR(30), age_range VARCHAR(30), rpx_birthday DATE, rpx_url TEXT, income_range VARCHAR(30), email VARCHAR(255) NOT NULL, total_views INT DEFAULT 0, status VARCHAR(255) DEFAULT 'Pending', activate_code VARCHAR(14) NOT NULL, activated TINYINT DEFAULT 0, profile_image VARCHAR(255) DEFAULT 'user_profile_default.jpg', rpx_profile_image bool DEFAULT 0, score INT DEFAULT 0, score_ratio DECIMAL(18, 2) DEFAULT 0, score_positive_count INT DEFAULT 0, score_negative_count INT DEFAULT 0, limelight_count INT DEFAULT 0, flag_count INT DEFAULT 0, login_count INT DEFAULT 0, first_100 bool DEFAULT 0, first_1000 bool DEFAULT 0, is_mod bool DEFAULT 0, suspend_until DATE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX sf_guard_user_id_idx (sf_guard_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE session (id VARCHAR(32), session_data TEXT NOT NULL, time INT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE song (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, name VARCHAR(255) NOT NULL, content TEXT NOT NULL, song_image VARCHAR(255) DEFAULT 'news_profile_default.gif', score INT DEFAULT 0 NOT NULL, total_views INT DEFAULT 0, total_plays INT DEFAULT 0, filename VARCHAR(50), original_filename VARCHAR(50), favorited_count INT DEFAULT 0, favorite_badge_flag TINYINT DEFAULT 0, tag_lock MEDIUMINT DEFAULT 0, comment_lock MEDIUMINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, name_slug VARCHAR(255), INDEX userIndex_idx (user_id), INDEX index_idx (user_id), UNIQUE INDEX song_sluggable_idx (name_slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE song_favorite (id INT AUTO_INCREMENT, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE song_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE song_play (id INT AUTO_INCREMENT, count INT DEFAULT 1, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX limelightIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE song_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE song_view (id INT AUTO_INCREMENT, count INT DEFAULT 1, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX songIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE source (id INT AUTO_INCREMENT, source_name VARCHAR(255) NOT NULL, status VARCHAR(255) DEFAULT 'Active' NOT NULL, description TEXT, url VARCHAR(200), score INT DEFAULT 0, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, name_slug VARCHAR(255), INDEX name_idx (source_name), UNIQUE INDEX source_sluggable_idx (name_slug), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE source_view (id INT AUTO_INCREMENT, count INT DEFAULT 1, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX sourceIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE specification (id INT AUTO_INCREMENT, name VARCHAR(100), status VARCHAR(255) DEFAULT 'Active', score INT DEFAULT 0, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, name_slug VARCHAR(255), INDEX userIndex_idx (user_id), UNIQUE INDEX specification_sluggable_idx (name_slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tag (id INT AUTO_INCREMENT, name VARCHAR(50), status VARCHAR(255) DEFAULT 'Active', score INT DEFAULT 0, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, name_slug VARCHAR(255), INDEX userIndex_idx (user_id), UNIQUE INDEX tag_sluggable_idx (name_slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_action (id INT AUTO_INCREMENT, limelight_id INT, news_id INT, song_id INT, comment_id INT, limelightprocon_id INT, wiki_id INT, limelightreviewuser_id INT, limelightreviewpro_id INT, limelightspecification_id INT, itemtag_id INT, type VARCHAR(30), site VARCHAR(255) DEFAULT 'tech', user_id INT, status VARCHAR(255) DEFAULT 'Active', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (type), INDEX limelight_id_idx (limelight_id), INDEX news_id_idx (news_id), INDEX comment_id_idx (comment_id), INDEX limelightprocon_id_idx (limelightprocon_id), INDEX wiki_id_idx (wiki_id), INDEX limelightreviewuser_id_idx (limelightreviewuser_id), INDEX limelightreviewpro_id_idx (limelightreviewpro_id), INDEX limelightspecification_id_idx (limelightspecification_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_badge (id INT AUTO_INCREMENT, num_completed BIGINT DEFAULT 0, level_completed INT DEFAULT 0, user_id INT, badge_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX badge_id_idx (badge_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_notification (id INT AUTO_INCREMENT, message VARCHAR(255), type VARCHAR(255), is_read TINYINT DEFAULT 0, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_revenue (id INT AUTO_INCREMENT, amount FLOAT(18, 2), popularity INT, status VARCHAR(255) DEFAULT 'Active', claimed bool DEFAULT 0, claim_date datetime, paypal_invoice VARCHAR(255), user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_review_favorite (id INT AUTO_INCREMENT, user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, type VARCHAR(255), status VARCHAR(255) DEFAULT 'Active', item_id INT, user_id INT, target_user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userindex_idx (user_id, item_id), INDEX user_id_idx (user_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_strike (id INT AUTO_INCREMENT, type VARCHAR(50), status VARCHAR(50) DEFAULT 'Active', user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_view (id INT AUTO_INCREMENT, count INT DEFAULT 1, user_id INT, target_user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX targetUserindex_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE view (id INT AUTO_INCREMENT, count INT DEFAULT 1, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE wiki (id INT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'Active', slice_id INT, user_id INT, topics VARCHAR(255), content TEXT, note VARCHAR(255), version INT DEFAULT 1, score INT DEFAULT 0, is_active bool DEFAULT 0, edit_type VARCHAR(255) DEFAULT 'minor', edit_lock bool DEFAULT 0, edit_lock_start datetime, edit_lock_time datetime, edit_lock_user_id INT, lock_code bool DEFAULT 0, group_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX groupIndex_idx (group_id, version), INDEX group_id_idx (group_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE wiki_flag (id INT AUTO_INCREMENT, type VARCHAR(255), user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE wiki_score (id INT AUTO_INCREMENT, amount MEDIUMINT DEFAULT 1, status VARCHAR(255) DEFAULT 'Active', user_id INT, target_user_id INT, item_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX userIndex_idx (user_id), INDEX itemIndex_idx (item_id), INDEX target_user_id_idx (target_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, rpx_identifier VARCHAR(255), rpx_provider_name VARCHAR(255), username_changed bool DEFAULT 0, show_help bool DEFAULT 1, show_welcome_splash bool DEFAULT 1, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), UNIQUE INDEX rpx_idx (rpx_identifier), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE badge_level ADD CONSTRAINT badge_level_badge_id_badge_id FOREIGN KEY (badge_id) REFERENCES badge(id) ON DELETE CASCADE;
ALTER TABLE beta_giveaway ADD CONSTRAINT beta_giveaway_beta_email_id_beta_email_id FOREIGN KEY (beta_email_id) REFERENCES beta_email(id) ON DELETE CASCADE;
ALTER TABLE category ADD CONSTRAINT category_parent_id_category_id FOREIGN KEY (parent_id) REFERENCES category(id);
ALTER TABLE category_limelight ADD CONSTRAINT category_limelight_limelight_id_limelight_id FOREIGN KEY (limelight_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE category_limelight ADD CONSTRAINT category_limelight_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE CASCADE;
ALTER TABLE category_score_type ADD CONSTRAINT category_score_type_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE CASCADE;
ALTER TABLE category_specification ADD CONSTRAINT category_specification_specification_id_specification_id FOREIGN KEY (specification_id) REFERENCES specification(id) ON DELETE CASCADE;
ALTER TABLE category_specification ADD CONSTRAINT category_specification_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_wiki_id_wiki_id FOREIGN KEY (wiki_id) REFERENCES wiki(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_song_id_song_id FOREIGN KEY (song_id) REFERENCES song(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_parent_id_comment_id FOREIGN KEY (parent_id) REFERENCES comment(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_news_id_news_id FOREIGN KEY (news_id) REFERENCES news(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_limelightreviewuser_id_limelight_review_user_id FOREIGN KEY (limelightreviewuser_id) REFERENCES limelight_review_user(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_limelightreviewpro_id_limelight_review_pro_id FOREIGN KEY (limelightreviewpro_id) REFERENCES limelight_review_pro(id) ON DELETE CASCADE;
ALTER TABLE comment_flag ADD CONSTRAINT comment_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE comment_flag ADD CONSTRAINT comment_flag_item_id_comment_id FOREIGN KEY (item_id) REFERENCES comment(id) ON DELETE CASCADE;
ALTER TABLE comment_score ADD CONSTRAINT comment_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE comment_score ADD CONSTRAINT comment_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE comment_score ADD CONSTRAINT comment_score_item_id_comment_id FOREIGN KEY (item_id) REFERENCES comment(id) ON DELETE CASCADE;
ALTER TABLE favorite ADD CONSTRAINT favorite_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE flag ADD CONSTRAINT flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE follow_limelight_reference ADD CONSTRAINT follow_limelight_reference_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE follow_limelight_reference ADD CONSTRAINT follow_limelight_reference_limelight_id_limelight_id FOREIGN KEY (limelight_id) REFERENCES limelight(id);
ALTER TABLE follow_user_reference ADD CONSTRAINT follow_user_reference_user1_id_sf_guard_user_id FOREIGN KEY (user1_id) REFERENCES sf_guard_user(id);
ALTER TABLE item_tag ADD CONSTRAINT item_tag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE item_tag ADD CONSTRAINT item_tag_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id) ON DELETE CASCADE;
ALTER TABLE item_tag ADD CONSTRAINT item_tag_item_id_news_id FOREIGN KEY (item_id) REFERENCES news(id) ON DELETE CASCADE;
ALTER TABLE item_tag_flag ADD CONSTRAINT item_tag_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE item_tag_flag ADD CONSTRAINT item_tag_flag_item_id_item_tag_id FOREIGN KEY (item_id) REFERENCES item_tag(id) ON DELETE CASCADE;
ALTER TABLE item_tag_score ADD CONSTRAINT item_tag_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE item_tag_score ADD CONSTRAINT item_tag_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE item_tag_score ADD CONSTRAINT item_tag_score_item_id_item_tag_id FOREIGN KEY (item_id) REFERENCES item_tag(id) ON DELETE CASCADE;
ALTER TABLE limelight ADD CONSTRAINT limelight_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight ADD CONSTRAINT limelight_company_id_limelight_id FOREIGN KEY (company_id) REFERENCES limelight(id);
ALTER TABLE limelight_favorite ADD CONSTRAINT limelight_favorite_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_favorite ADD CONSTRAINT limelight_favorite_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_news ADD CONSTRAINT limelight_news_news_id_news_id FOREIGN KEY (news_id) REFERENCES news(id) ON DELETE CASCADE;
ALTER TABLE limelight_news ADD CONSTRAINT limelight_news_limelight_id_limelight_id FOREIGN KEY (limelight_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_own ADD CONSTRAINT limelight_own_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_own ADD CONSTRAINT limelight_own_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_pro_con ADD CONSTRAINT limelight_pro_con_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_pro_con ADD CONSTRAINT limelight_pro_con_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_pro_con_flag ADD CONSTRAINT limelight_pro_con_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_pro_con_flag ADD CONSTRAINT limelight_pro_con_flag_item_id_limelight_pro_con_id FOREIGN KEY (item_id) REFERENCES limelight_pro_con(id) ON DELETE CASCADE;
ALTER TABLE limelight_pro_con_score ADD CONSTRAINT limelight_pro_con_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_pro_con_score ADD CONSTRAINT limelight_pro_con_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_pro_con_score ADD CONSTRAINT limelight_pro_con_score_item_id_limelight_pro_con_id FOREIGN KEY (item_id) REFERENCES limelight_pro_con(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_pro ADD CONSTRAINT limelight_review_pro_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_pro ADD CONSTRAINT limelight_review_pro_source_id_limelight_id FOREIGN KEY (source_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_pro ADD CONSTRAINT limelight_review_pro_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_pro_flag ADD CONSTRAINT limelight_review_pro_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_pro_flag ADD CONSTRAINT limelight_review_pro_flag_item_id_limelight_review_pro_id FOREIGN KEY (item_id) REFERENCES limelight_review_pro(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_pro_score ADD CONSTRAINT limelight_review_pro_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_pro_score ADD CONSTRAINT limelight_review_pro_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_pro_score ADD CONSTRAINT limelight_review_pro_score_item_id_limelight_review_pro_id FOREIGN KEY (item_id) REFERENCES limelight_review_pro(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_score_part ADD CONSTRAINT limelight_review_score_part_review_id_limelight_review_user_id FOREIGN KEY (review_id) REFERENCES limelight_review_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_score_part ADD CONSTRAINT lcci FOREIGN KEY (category_score_type_id) REFERENCES category_score_type(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_user ADD CONSTRAINT limelight_review_user_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_user ADD CONSTRAINT limelight_review_user_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_user_flag ADD CONSTRAINT limelight_review_user_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_user_flag ADD CONSTRAINT limelight_review_user_flag_item_id_limelight_review_user_id FOREIGN KEY (item_id) REFERENCES limelight_review_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_user_score ADD CONSTRAINT limelight_review_user_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_user_score ADD CONSTRAINT limelight_review_user_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_review_user_score ADD CONSTRAINT limelight_review_user_score_item_id_limelight_review_user_id FOREIGN KEY (item_id) REFERENCES limelight_review_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_score ADD CONSTRAINT limelight_score_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_slice ADD CONSTRAINT limelight_slice_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_slice ADD CONSTRAINT limelight_slice_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_song ADD CONSTRAINT limelight_song_song_id_song_id FOREIGN KEY (song_id) REFERENCES song(id) ON DELETE CASCADE;
ALTER TABLE limelight_song ADD CONSTRAINT limelight_song_limelight_id_limelight_id FOREIGN KEY (limelight_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_specification ADD CONSTRAINT limelight_specification_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_specification ADD CONSTRAINT limelight_specification_specification_id_specification_id FOREIGN KEY (specification_id) REFERENCES specification(id) ON DELETE CASCADE;
ALTER TABLE limelight_specification ADD CONSTRAINT limelight_specification_source_id_limelight_id FOREIGN KEY (source_id) REFERENCES limelight(id);
ALTER TABLE limelight_specification ADD CONSTRAINT limelight_specification_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_specification_flag ADD CONSTRAINT limelight_specification_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_specification_flag ADD CONSTRAINT limelight_specification_flag_item_id_limelight_specification_id FOREIGN KEY (item_id) REFERENCES limelight_specification(id) ON DELETE CASCADE;
ALTER TABLE limelight_specification_score ADD CONSTRAINT limelight_specification_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_specification_score ADD CONSTRAINT limelight_specification_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_specification_score ADD CONSTRAINT limelight_specification_score_item_id_limelight_specification_id FOREIGN KEY (item_id) REFERENCES limelight_specification(id) ON DELETE CASCADE;
ALTER TABLE limelight_summary ADD CONSTRAINT limelight_summary_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_summary ADD CONSTRAINT limelight_summary_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_view ADD CONSTRAINT limelight_view_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_view ADD CONSTRAINT limelight_view_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_wiki ADD CONSTRAINT limelight_wiki_wiki_group_id_wiki_group_id FOREIGN KEY (wiki_group_id) REFERENCES wiki(group_id) ON DELETE CASCADE;
ALTER TABLE limelight_wiki ADD CONSTRAINT limelight_wiki_limelight_id_limelight_id FOREIGN KEY (limelight_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE limelight_wiki_flag ADD CONSTRAINT limelight_wiki_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE limelight_wiki_flag ADD CONSTRAINT limelight_wiki_flag_item_id_limelight_wiki_id FOREIGN KEY (item_id) REFERENCES limelight_wiki(id) ON DELETE CASCADE;
ALTER TABLE news ADD CONSTRAINT news_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_favorite ADD CONSTRAINT news_favorite_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_favorite ADD CONSTRAINT news_favorite_item_id_news_id FOREIGN KEY (item_id) REFERENCES news(id) ON DELETE CASCADE;
ALTER TABLE news_flag ADD CONSTRAINT news_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_flag ADD CONSTRAINT news_flag_item_id_news_id FOREIGN KEY (item_id) REFERENCES news(id) ON DELETE CASCADE;
ALTER TABLE news_link ADD CONSTRAINT news_link_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_link ADD CONSTRAINT news_link_source_id_limelight_id FOREIGN KEY (source_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE news_link ADD CONSTRAINT news_link_item_id_news_id FOREIGN KEY (item_id) REFERENCES news(id) ON DELETE CASCADE;
ALTER TABLE news_link_flag ADD CONSTRAINT news_link_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_link_flag ADD CONSTRAINT news_link_flag_item_id_news_link_id FOREIGN KEY (item_id) REFERENCES news_link(id) ON DELETE CASCADE;
ALTER TABLE news_link_score ADD CONSTRAINT news_link_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_link_score ADD CONSTRAINT news_link_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_link_score ADD CONSTRAINT news_link_score_item_id_news_link_id FOREIGN KEY (item_id) REFERENCES news_link(id) ON DELETE CASCADE;
ALTER TABLE news_score ADD CONSTRAINT news_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_score ADD CONSTRAINT news_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_score ADD CONSTRAINT news_score_item_id_news_id FOREIGN KEY (item_id) REFERENCES news(id) ON DELETE CASCADE;
ALTER TABLE news_tag ADD CONSTRAINT news_tag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_tag ADD CONSTRAINT news_tag_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id) ON DELETE CASCADE;
ALTER TABLE news_tag ADD CONSTRAINT news_tag_item_id_news_id FOREIGN KEY (item_id) REFERENCES news(id) ON DELETE CASCADE;
ALTER TABLE news_tag_flag ADD CONSTRAINT news_tag_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_tag_flag ADD CONSTRAINT news_tag_flag_item_id_news_tag_id FOREIGN KEY (item_id) REFERENCES news_tag(id) ON DELETE CASCADE;
ALTER TABLE news_tag_score ADD CONSTRAINT news_tag_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_tag_score ADD CONSTRAINT news_tag_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_tag_score ADD CONSTRAINT news_tag_score_item_id_news_tag_id FOREIGN KEY (item_id) REFERENCES news_tag(id) ON DELETE CASCADE;
ALTER TABLE news_view ADD CONSTRAINT news_view_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE news_view ADD CONSTRAINT news_view_item_id_news_id FOREIGN KEY (item_id) REFERENCES news(id) ON DELETE CASCADE;
ALTER TABLE play ADD CONSTRAINT play_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE pro_review_favorite ADD CONSTRAINT pro_review_favorite_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE profile ADD CONSTRAINT profile_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE score ADD CONSTRAINT score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE score ADD CONSTRAINT score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE song ADD CONSTRAINT song_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE song_favorite ADD CONSTRAINT song_favorite_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE song_favorite ADD CONSTRAINT song_favorite_item_id_song_id FOREIGN KEY (item_id) REFERENCES song(id) ON DELETE CASCADE;
ALTER TABLE song_flag ADD CONSTRAINT song_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE song_flag ADD CONSTRAINT song_flag_item_id_song_id FOREIGN KEY (item_id) REFERENCES song(id) ON DELETE CASCADE;
ALTER TABLE song_play ADD CONSTRAINT song_play_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE song_play ADD CONSTRAINT song_play_item_id_song_id FOREIGN KEY (item_id) REFERENCES song(id) ON DELETE CASCADE;
ALTER TABLE song_score ADD CONSTRAINT song_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE song_score ADD CONSTRAINT song_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE song_score ADD CONSTRAINT song_score_item_id_song_id FOREIGN KEY (item_id) REFERENCES song(id) ON DELETE CASCADE;
ALTER TABLE song_view ADD CONSTRAINT song_view_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE song_view ADD CONSTRAINT song_view_item_id_song_id FOREIGN KEY (item_id) REFERENCES song(id) ON DELETE CASCADE;
ALTER TABLE source ADD CONSTRAINT source_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE source_view ADD CONSTRAINT source_view_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE source_view ADD CONSTRAINT source_view_item_id_limelight_id FOREIGN KEY (item_id) REFERENCES limelight(id) ON DELETE CASCADE;
ALTER TABLE specification ADD CONSTRAINT specification_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE tag ADD CONSTRAINT tag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_action ADD CONSTRAINT user_action_wiki_id_wiki_id FOREIGN KEY (wiki_id) REFERENCES wiki(id);
ALTER TABLE user_action ADD CONSTRAINT user_action_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_action ADD CONSTRAINT user_action_news_id_news_id FOREIGN KEY (news_id) REFERENCES news(id);
ALTER TABLE user_action ADD CONSTRAINT user_action_limelightspecification_id_limelight_specification_id FOREIGN KEY (limelightspecification_id) REFERENCES limelight_specification(id);
ALTER TABLE user_action ADD CONSTRAINT user_action_limelightreviewuser_id_limelight_review_user_id FOREIGN KEY (limelightreviewuser_id) REFERENCES limelight_review_user(id);
ALTER TABLE user_action ADD CONSTRAINT user_action_limelightreviewpro_id_limelight_review_pro_id FOREIGN KEY (limelightreviewpro_id) REFERENCES limelight_review_pro(id);
ALTER TABLE user_action ADD CONSTRAINT user_action_limelightprocon_id_limelight_pro_con_id FOREIGN KEY (limelightprocon_id) REFERENCES limelight_pro_con(id);
ALTER TABLE user_action ADD CONSTRAINT user_action_limelight_id_limelight_id FOREIGN KEY (limelight_id) REFERENCES limelight(id);
ALTER TABLE user_action ADD CONSTRAINT user_action_comment_id_comment_id FOREIGN KEY (comment_id) REFERENCES comment(id);
ALTER TABLE user_badge ADD CONSTRAINT user_badge_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_badge ADD CONSTRAINT user_badge_badge_id_badge_id FOREIGN KEY (badge_id) REFERENCES badge(id) ON DELETE CASCADE;
ALTER TABLE user_notification ADD CONSTRAINT user_notification_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_revenue ADD CONSTRAINT user_revenue_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_review_favorite ADD CONSTRAINT user_review_favorite_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_score ADD CONSTRAINT user_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_score ADD CONSTRAINT user_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_strike ADD CONSTRAINT user_strike_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_view ADD CONSTRAINT user_view_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_view ADD CONSTRAINT user_view_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE view ADD CONSTRAINT view_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE wiki ADD CONSTRAINT wiki_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE wiki_flag ADD CONSTRAINT wiki_flag_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE wiki_flag ADD CONSTRAINT wiki_flag_item_id_wiki_id FOREIGN KEY (item_id) REFERENCES wiki(id) ON DELETE CASCADE;
ALTER TABLE wiki_score ADD CONSTRAINT wiki_score_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE wiki_score ADD CONSTRAINT wiki_score_target_user_id_sf_guard_user_id FOREIGN KEY (target_user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE wiki_score ADD CONSTRAINT wiki_score_item_id_wiki_id FOREIGN KEY (item_id) REFERENCES wiki(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
